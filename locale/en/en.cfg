[mod-name]
viirld=Rail Logistics Dispatcher

[mod-description]
viirld=Adds a dispatcher (building) to automate railway logistics based on offers and requests.\n\nThe mod is optimized for multi-delivery deliveries, has an intuitive interface and is published under a free license.

[entity-name]
viirld-in=Dispatcher Input port
viirld-out=Dispatcher Output port
viirld-dispatcher=Rail Logistics Dispatcher

[entity-description]
viirld-dispatcher=A nearby station is activated in rail logistics.\nConnect the signal with the contents of the station to the input port. The input port will reflect the request to the station (with a minus sign).\nWhen the train stops, a signal with delivery information will be sent to the output port.

[technology-name]
viirld-dispatcher=Rail Logistics Dispatcher

[technology-description]
viirld-dispatcher=Automates rail logistics by combining supply stations, request stations and trains into a single automated network.

[viirld]
#from:en.txt#informatron
informatron=The Rail Logistics Dispatcher [item=viirld-dispatcher] — is a small building (looks like a lamp) that is placed next to the station.\n\nThe dispatcher has two ports (visible in Alt-mode): input and output. These ports allow the dispatcher to receive information about the cargo at the station and transmit information about trains and deliveries.\n\nDispatcher operating modes:\n\n[font=heading-2][item=locomotive] Depot[/font]\n\nAt the depot, trains are waiting for delivery orders.\nThe train always follows the depot with the same name from where it left, finding it by the name of the station.\n\nIf you want to have different depots for different types of trains, name them differently.\nAt the depot, the train is painted in the color of the station, and also receives a network mask.\nThe name of the depot to which the train is assigned is applied to the front locomotive.\n\nAny train arriving at the depot becomes a member of the railway logistics network.\nAfter completing the task, the train goes to the depot, but on the way it can receive a new task, bypassing the depot.\n\nIf there is a train with cargo in the depot, it will be sent to the cleaning station, if there is one. If not, it will stand and wait until it is emptied.\nIf there is a train lacking fuel (configurable in settings) in the depot, it will be sent to the fuel station, if there is one. If not, it will stand and wait until it is refueled.\n\n\n[font=heading-2][item=rocket-fuel] Refueling[/font]\n\nIf the train's fuel/energy supply goes below the minimum allowed value (set in the settings), it is sent to the nearest suitable fuel station, if there is one.\nIf there are no fuel stations, then the train will proceed to the depot, where it will wait for fuel to be loaded.\nUsually one fuel station per surface is sufficient.\nAt the fuel station, it is recommended to refuel the train as soon as possible.\nIf the fuel station is the only station in the train schedule, then after refueling it will be sent to the nearest suitable depot, so it is convenient to build new trains at the fuel station.\n\n\n[font=heading-2][item=iron-chest] Cleaning[/font]\n\nIf the train is not empty upon completion of a task or on being sent to the depot, it is sent to the cleaning station, where any cargo should be emptied.\n\nIf there are no cleaning stations on the surface, the train will proceed to the depot and will not be used until it is emptied.\n\n\n[font=heading-2][item=logistic-chest-passive-provider][item=logistic-chest-requester] Supply or Request[/font]\n\nDepending on the settings and material signals, the station becomes a participant in delivery tasks.\n\nFor each type of cargo (solid or liquid), the following parameters are set:\n\n[font=default-bold]Request[/font] — the amount of cargo that should be supported at the station. If not specified, it is assumed that the station supplies this type of cargo.\n\n[font=default-bold]Minimum[/font] — minimum train load for this type of cargo. Trains must not run empty.\n\nYou can also configure the general mode [virtual-signal=signal-anything] — request (<0) and offer (>0) will be taken from the signal on the dispatcher's input port. To activate the general mode, a minimum value must be set for a solid load and/or liquid.\n\nWhen two stations with a similar request and supply appear in the network, a delivery is created if there is a suitable train available.\n\n\n[font=heading-2]Net mask[/font]\n\nYou can set the net mask bit. For example:\n1 — the first network,\n2 — the second network,\n3 = 1 + 2 — both networks.\n\nFor delivery, it is necessary that the masks (bit AND) of the network at the supply station, the request station and the train intersect.\n\n0 — no networks — station will not be used;\n-1 — all networks.\n\n\n[font=heading-2]Train types[/font]\n\nOne or more types of trains that are allowed at this station (separated by a space).\n\nTrain type is a string where the character corresponds to the type of car (from left to right):\nL or < — locomotive directed forward,\n> — locomotive directed backwards,\nC — cargo wagon,\nF — fluid wagon,\nA — artillery.\n\nFor example:\n<CC — Station will accept freight trains with a configuration of locomotive-cargo-cargo\n<CC <FF — Station will accept freight trains with a configuration of both locomotive-cargo-cargo and locomotive-fluid-fluid\n\nEmpty field — Leaving the setting blank means the station will accept any type of train.\n\n\n[font=heading-2]Additional functionality[/font]\n\n[font=default-bold]Turn Inserters.[/font] Supply stations have the ability to clear inserters by temporarily reversing them. This greatly facilitates the creation of multi-cargo supply stations.\n\n[font=default-bold]Tamp when loading.[/font] When loading multiple goods, sometimes a situation arises that a bundle of cargo is divided into different wagons blocking the insertion of another cargo. This option "tamps" the pack into one of the wagons.\n\n[font=default-bold]Compound deliveries.[/font] Allows multiple types of cargo to be delivered between stations at the same time.\n\n[font=default-bold]Signal mode.[/font] Enables sending a train on a green signal at a station.\n\n[font=default-bold]Equality in the schedule.[/font] Usually, when loading, the station might load more cargo than is strictly requested (due to the size of the inserter stack). This option can be enabled when needed for additional loading accuracy.\n\n\n[font=heading-2]Why use the Rail Logistics Dispatcher over LTN (Logistics Train Network)?[/font]\n\nThe dispatcher is optimized for multi-item deliveries: all interfering problems have been resolved.\nIt has a friendly and intuitive interface.\nThe dispatcher is very good with blueprints.\nIn addition, the mod is published under the free MIT license.
menu_viirld=Rail Logistics Dispatcher [item=viirld-dispatcher]
title_viirld=Rail Logistics Dispatcher [item=viirld-dispatcher]

err-train-not-by-schedule=Train [train=__1__] arrived at station [train-stop=__2__] not on schedule
err-unknown-delivery=Train [train=__1__] with unknown delivery at station [train-stop=__2__]
err-unknown-train=Strange train [train=__1__] at station [train-stop=__2__]
err-depot-not-found=Train [train=__1__] cannot find depot
err-clean-not-found=Train [train=__1__] cannot find a cleaning station

err-no-station=No station [entity=train-stop]
err-not-input-connected=No connection [item=green-wire][item=red-wire]
err-no-rail=No rails [entity=straight-rail]
err-internal=No ports

[viirld-gui]
window-title=__1__ station dispatcher
rollback=Rollback
apply=Apply

mode-off=Off
mode-off-tt=The dispatcher will not control this station.

mode-bidi=[item=logistic-chest-passive-provider][item=logistic-chest-requester] Supply or request
#from:en.txt#mode-bidi-tt
mode-bidi-tt=Depending on the settings and material signals, the station becomes a participant in delivery tasks.\n\nFor each type of cargo (solid or liquid), the following parameters are set:\n\n[font=default-bold]Request[/font] — the amount of cargo that should be supported at the station. If not specified, it is assumed that the station supplies this type of cargo.\n\n[font=default-bold]Minimum[/font] — minimum train load for this type of cargo. Trains must not run empty.\n\nYou can also configure the general mode [virtual-signal=signal-anything] — request (<0) and offer (>0) will be taken from the signal on the dispatcher's input port. To activate the general mode, a minimum value must be set for a solid load and/or liquid.\n\nWhen two stations with a similar request and supply appear in the network, a delivery is created if there is a suitable train available.

mode-depot=[item=locomotive] Depot
#from:en.txt#mode-depot-tt
mode-depot-tt=At the depot, trains are waiting for delivery orders.\nThe train always follows the depot with the same name from where it left, finding it by the name of the station.\n\nIf you want to have different depots for different types of trains, name them differently.\nAt the depot, the train is painted in the color of the station, and also receives a network mask.\nThe name of the depot to which the train is assigned is applied to the front locomotive.\n\nAny train arriving at the depot becomes a member of the railway logistics network.\nAfter completing the task, the train goes to the depot, but on the way it can receive a new task, bypassing the depot.\n\nIf there is a train with cargo in the depot, it will be sent to the cleaning station, if there is one. If not, it will stand and wait until it is emptied.\nIf there is a train lacking fuel (configurable in settings) in the depot, it will be sent to the fuel station, if there is one. If not, it will stand and wait until it is refueled.

mode-fuel=[item=rocket-fuel] Refueling
#from:en.txt#mode-fuel-tt
mode-fuel-tt=If the train's fuel/energy supply goes below the minimum allowed value (set in the settings), it is sent to the nearest suitable fuel station, if there is one.\nIf there are no fuel stations, then the train will proceed to the depot, where it will wait for fuel to be loaded.\nUsually one fuel station per surface is sufficient.\nAt the fuel station, it is recommended to refuel the train as soon as possible.\nIf the fuel station is the only station in the train schedule, then after refueling it will be sent to the nearest suitable depot, so it is convenient to build new trains at the fuel station.

mode-clean=[item=iron-chest] Cleaning
#from:en.txt#mode-clean-tt
mode-clean-tt=If the train is not empty upon completion of a task or on being sent to the depot, it is sent to the cleaning station, where any cargo should be emptied.\n\nIf there are no cleaning stations on the surface, the train will proceed to the depot and will not be used until it is emptied.

item-request=Request:
item-min=Minimum:
item-min-tt=Minimum quantity to be delivered
item-other-min-cargo=Cargo minimum:
item-other-min-cargo-tt=The minimum amount of cargo that will be requested/provided. If empty, no cargo will be requested/provided.
item-other-min-fluid=Fluid minimum:
item-other-min-fluid-tt=The minimum amount of liquid that will be requested/provided. If empty, no liquid will be requested/provided.

item-other-tt=Set the minimum amount of cargo or liquid to enable signal-based mode:\nif signal <0 — request,\nif singal >0 — supply.\n\nDon't forget to connect a wire to the dispatcher's input port and give a signal.

nets=Net mask:
#from:en.txt#nets-tt
nets-tt=You can set the net mask bit. For example:\n1 — the first network,\n2 — the second network,\n3 = 1 + 2 — both networks.\n\nFor delivery, it is necessary that the masks (bit AND) of the network at the supply station, the request station and the train intersect.\n\n0 — no networks — station will not be used;\n-1 — all networks.

priority=Priority:
#from:en.txt#priority-tt
priority-tt=Stations with a higher priority are used for deliveries first. Both for supply stations and request stations.\n\nIn some rare cases, a supply station with a lower priority can be used instead of a higher priority — an implementation feature.


comps=Train types:
#from:en.txt#comps-tt
comps-tt=One or more types of trains that are allowed at this station (separated by a space).\n\nTrain type is a string where the character corresponds to the type of car (from left to right):\nL or < — locomotive directed forward,\n> — locomotive directed backwards,\nC — cargo wagon,\nF — fluid wagon,\nA — artillery.\n\nFor example:\n<CC — Station will accept freight trains with a configuration of locomotive-cargo-cargo\n<CC <FF — Station will accept freight trains with a configuration of both locomotive-cargo-cargo and locomotive-fluid-fluid\n\nEmpty field — Leaving the setting blank means the station will accept any type of train.

req-prov-head=[color=__1__]Requests−[/color] and [color=__2__]supplies+[/color]
req-prov-count=Count
req-prov-on-way=On way
deliveries-head=Deliveries
deliveries-from=From
deliveries-to=To
deliveries-time=Time elapsed
stat-head=Statistics
stat-trains=Trains that have used this stop: __1__
stat-count=Deliveries
stat-sent=Sent
stat-recv=Recv
stat-lastTime=Last delivery
stat-depot-trains=Trains
stat-depot-freeTrains=Free

connect-tip=Send the current contents of the station to the input port.

mem-tt=Settings memory slot
mem-item-tt=Left-click on the cell while holding Ctrl, Alt or Shift to save the item's Request and Minimum settings to that cell.\nJust left-click to apply the saved settings.\nRight-click to clear the cell.
mem-item-active-tt=\n\nRequest: __1__\nMinimum: __2__
mem-item-no-req=No, supply
mem-item-no-min=Not set
mem-other-active-tt=\n\nCargo minimum: __1__\nFluid minimum: __2__
mem-other-no-cargo=No, don't deliver cargo
mem-other-no-fluid=No, don't deliver liquid

cb-flagMute=Do not report errors
cb-flagMute-tt=Do not report if the request cannot be satisfied. Both due to the lack of a suitable train, and due to the lack of supplies.
cb-flagUseSignals=Signals mode
cb-flagUseSignals-tt=Generate a schedule for this station based on signals ([virtual-signal=signal-green]). Don't forget to connect the station.
cb-flagUseEquals=Require exact amounts.
cb-flagUseEquals-tt=By default, schedules use non-strict comparison (>=). This option enables strict comparison (=). This can be useful for more accurate loads.
cb-flagTamp=Tamp when loading
cb-flagTamp-tt=With compound loading, it may happen that the last stack of some cargo will be scattered on different cars. This option will place the cargo in one wagon — it will tamp.
cb-flagTurnInserters=Turn inserters
cb-flagTurnInserters-tt=Sometimes, when sending a train, something may remain in the inserters. This option will temporarily turn inserters around when sending the train to put the item back in the chest.
cb-flagReverseLocos=Turn locomotives
cb-flagReverseLocos-tt=Turns locomotives around at this station when a train leaves.
cb-flagAllowMulti=Compound deliveries
cb-flagAllowMulti-tt=Allow multiple types of cargo to be carried on the same train.
cb-flagBuild=Build trains
cb-flagBuild-tt=If there are no suitable free trains, the train construction plan will be placed in this depot. You will need construction drones to build it.
cb-flagDestroy=Disassemble trains
cb-flagDestroy-tt=If a train stays idle for too long at the depot, it will be marked for dismantling. It will take drones to take it apart.
out-need-neg=Output required content (−)
out-need-neg-tt=The output port will display the contents of the train required for shipment with a minus sign. For example, at the supply station, the loaded cargo will be displayed (with a minus sign). And at the request station — empty — nothing should remain on the train.
out-need-pos=Output required content (+)
out-need-pos-tt=The output port will display the contents of the train required for shipment. For example, at the supply station, the loaded cargo will be displayed. And at the request station — empty — nothing should remain on the train.
out-exchange=Output required exchange
out-exchange-tt=The output port will display the cargo that needs to be loaded (>0) or unloaded (<0) to send the train. For example, at the supply station, the loaded cargo will be displayed with a plus sign. And at the request station — the same, but with a minus sign.


# errors
no-provider=No stations supplying this item
no-min-provider=No Stations meet the minimum delivery requirement
no-train=No train available
low-priority=Low priority
low-priority-tt=At least because of the __1__ station

[viirld-units]
x1=×1
x1-tt=Exact amount
x-stack=×[img=viirld_stack]
x-stack-tt=Stacks
x-stack-str=__1__s
x-cargo-wagon=×[entity=__1__]
x-cargo-wagon-tt=Wagon
x-cargo-wagon-str=__1__w
x-fluid-wagon=×[entity=__1__]
x-fluid-wagon-tt=Wagon
x-fluid-wagon-str=__1__w


[mod-setting-name]
viirld-dispatcherSignalSlotCount=Dispatcher signal slots
viirld-minEnergyUseTrain=Minimum train energy (MJ)
viirld-fuelScheduleTime=Inactivity period at the fuel station (tick)
viirld-correctScheduleBeforeProvider=Adjust before supplier
viirld-correctScheduleAndAtProvider=Adjust at supplier
viirld-countingInsertersContent=Consider contents of inserters
viirld-updateTicks=Update interval (tick)


[mod-setting-description]
viirld-dispatcherSignalSlotCount=The number of slots for signals in the dispatcher settings. One slot is reserved for general mode.
viirld-minEnergyUseTrain=The minimum amount of stored energy in a train to be used in deliveries.\nIf, upon completion of a delivery or upon arrival at a depot, the train has less stored energy than specified in this setting, it will be directed to refuel or wait for refueling at the depot (if individual refueling no).\n\nSpecified in megajoules (MJ).
viirld-fuelScheduleTime=Time of inactivity in the refueling schedule (in ticks).
viirld-correctScheduleBeforeProvider=If during the journey of the train to the supply station there is an increase in supply, then the delivery can be adjusted upwards.
viirld-correctScheduleAndAtProvider=If the supply at the supply station increases while the train is being loaded, the delivery may be adjusted upwards.\n\nThis option only works if the "Adjust before supplier" option is enabled.
viirld-countingInsertersContent=When calculating the contents of stations, the incoming signal and the contents of the train are taken into account. This sometimes results in content jumps during load or unload. Because part of the cargo is in the inserters for some time. This option enables the dispatcher to account for inserter's hand content.
viirld-updateTicks=The mod updates data for one cargo station per approach. Approaches are made at intervals from this setting.\nA lower value means more frequent updates and more strain on the processor. Increase this value to raise performance when necessary

